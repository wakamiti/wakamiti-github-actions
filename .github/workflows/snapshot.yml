name: Deploy Snapshot
on:
  workflow_call:
    inputs:
      working-directory:
        required: false
        type: string
        default: "."

jobs:
  build:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
          overwrite-settings: 'false'

      - name: Cache Maven settings
        uses: actions/cache@v4
        with:
          path: ~/.m2/settings.xml
          key: settings-xml-${{ hashFiles('setup/maven-config.json') }}

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Check Snapshot
        working-directory: ${{ inputs.working-directory }}
        run: |
          version=$(mvn -q help:evaluate -Dexpression=project.version -DforceStdout)
          if [[ $version == *-SNAPSHOT ]]; then
            groupId=$(mvn -q help:evaluate -Dexpression=project.groupId -DforceStdout)
            artifactId=$(mvn -q help:evaluate -Dexpression=project.artifactId -DforceStdout)
            echo "PACKAGE=${groupId}.${artifactId}" >> $GITHUB_ENV
          else
            echo warn: non-snapshot version $version deployment ignored
          fi

      - name: Remove old packages
        uses: smartsquaregmbh/delete-old-packages@v0.8.1
        if: env.PACKAGE != ''
        continue-on-error: true
        with:
          organization: wakamiti
          type: maven
          keep: 0
          names: ${{ env.PACKAGE }}

      - name: Build and Deploy
        if: env.PACKAGE != ''
        working-directory: ${{ inputs.working-directory }}
        run: mvn deploy -DskipTests
