#
# This workflow validates the code by building, testing, and optionally
# analyzing it with SonarQube.
#
on:
  workflow_call:
    inputs:

      # Optional additional options to Maven commands, such as custom
      # parameters.
      extra_options:
        required: false
        type: string

      # Optional input to determine whether SonarQube analysis should be
      # performed.
      analyze:
        required: false
        type: boolean
        default: true

jobs:
  validate_code:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    concurrency:
      group: ${{ github.head_ref }}-validate-code
      cancel-in-progress: true
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:

      # Checks out the full history of repository code.
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Sets up Java Development Kit (JDK) version 17 using the Temurin
      # distribution.
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
          overwrite-settings: 'false'

      # Caches Maven settings file to avoid re-downloading it.
      - name: Cache Maven settings
        uses: actions/cache@v4
        with:
          path: ~/.m2/settings.xml
          key: settings-xml

      # Caches Maven dependencies to reduce build time.
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-

      # Caches SonarCloud dependencies to speed up the analysis process.
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        if: ${{ inputs.analyze && hashFiles('**/src/**') != '' }}
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Builds the project and runs tests using Maven.
      - name: Build & Test
        run: mvn -B clean install

      # Performs SonarQube analysis if the 'analyze' input is true and there are
      # changes in the source files.
      - name: SonarQube Analysis
        if: ${{ inputs.analyze && hashFiles('**/src/**') != '' }}
        env:
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B -ntp org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.organization=wakamiti \
            -Dsonar.projectKey=${{ github.event.repository.name }} \
            ${{ inputs.extra_options }} \
            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
